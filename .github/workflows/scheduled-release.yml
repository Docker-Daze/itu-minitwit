name: Build and Release (Scheduled)

on:
  schedule:
    - cron: '0 0 * * 0' # Runs every Sunday at midnight UTC

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install GitHub CLI
        run: sudo apt-get update && sudo apt-get install -y gh

      - name: Authenticate GitHub CLI
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

      - name: Check for Releases This Week
        id: check_releases
        run: |
          start_date=$(date -u -d 'last sunday +1 day' +'%Y-%m-%dT00:00:00Z')
          releases=$(gh api repos/${{ github.repository }}/releases --jq '[.[] | select(.created_at >= "'$start_date'") | .tag_name]')
          echo "Releases from this week: $releases"
          if [[ "$releases" != "[]" ]]; then
            echo "release_found=true" >> $GITHUB_ENV
          else
            echo "release_found=false" >> $GITHUB_ENV
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Skip Build if Release Found
        if: env.release_found == 'true'
        run: echo "Release already exists for this week. Skipping build."

      - name: Setup .NET
        if: env.release_found == 'false'
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "9.x"

      - name: Install dependencies
        if: env.release_found == 'false'
        run: dotnet restore

      - name: Build project
        if: env.release_found == 'false'
        run: dotnet build ./src/minitwit.web/minitwit.web.csproj --configuration Release --no-restore

      - name: Publish for Ubuntu
        if: env.release_found == 'false'
        run: dotnet publish ./src/minitwit.web/minitwit.web.csproj --configuration Release --runtime linux-x64 --self-contained -o ./publish/ubuntu

      - name: Zip Ubuntu Build
        if: env.release_found == 'false'
        run: zip -r ubuntu-build.zip ./publish/ubuntu

      - name: Create GitHub Release
        if: env.release_found == 'false'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "weekly-release-$(date +'%Y-%m-%d')"
          files: ubuntu-build.zip
        env:
          GITHUB_TOKEN: ${{ github.token }}  # Use GitHub's built-in token
