services:
  minitwitimage:
    image: nikolai/minitwitimage
    container_name: minitwit
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5114:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=minitwit_dev;Username=minitwit_user;Password=postgres
    networks:
      - itu-minitwit_default
    depends_on:
      postgres:
        condition: service_healthy
  
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9091:9091"
    networks:
      - itu-minitwit_default

  grafana:
    image: grafana/grafana:10.2.4
    ports:
      - "3000:3000"
    networks:
      - itu-minitwit_default
  
  postgres:
    image: postgres:16
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: minitwit_user
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: minitwit_dev
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U minitwit_user -d minitwit_dev" ]
      interval: 5s
      retries: 5
      timeout: 3s
    networks:
      - itu-minitwit_default
    volumes:
      - postgres_data:/var/lib/postgresql/data
  
networks:
  itu-minitwit_default:
    driver: bridge
    
volumes:
  postgres_data: